"""limit full_name col to len=50

Revision ID: 4db0feb40c30
Revises: 02f4713e6e37
Create Date: 2024-02-02 21:05:56.488251

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision: str = "4db0feb40c30"
down_revision: Union[str, None] = "02f4713e6e37"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    metadata = sa.MetaData()
    metadata.reflect(bind=op.get_bind())
    users_table = metadata.tables["users"]
    update_stmt = (
        sa.update(
            users_table,
        )
        .where(
            # those who exceed the limit
            sa.func.length(users_table.c.full_name)
            > 50,
        )
        .values(
            {
                users_table.c.full_name: sa.func.substring(
                    users_table.c.full_name, 1, 50
                ),
            }
        )
    )
    op.execute(update_stmt)
    op.alter_column(
        "users",
        "full_name",
        existing_type=sa.String(length=100),
        type_=sa.String(length=50),
        existing_nullable=True,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "users",
        "full_name",
        existing_type=sa.String(length=50),
        type_=sa.String(length=100),
        existing_nullable=True,
    )
    # ### end Alembic commands ###
