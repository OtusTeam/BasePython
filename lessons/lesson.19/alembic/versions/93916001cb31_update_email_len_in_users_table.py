"""update email len in users table

Revision ID: 93916001cb31
Revises: 8cb72ea7e203
Create Date: 2023-08-04 20:56:51.835219

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "93916001cb31"
down_revision: Union[str, None] = "8cb72ea7e203"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "users",
        "email",
        existing_type=sa.VARCHAR(length=100),
        type_=sa.String(length=120),
        existing_nullable=True,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    metadata = sa.MetaData()
    # users_table = sa.Table(
    #     "users",
    #     metadata,
    #     sa.Column("id", sa.Integer),
    #     sa.Column("email", sa.String),
    # )
    metadata.reflect(bind=op.get_bind())

    users_table = metadata.tables["users"]
    update_stmt = (
        sa.update(
            users_table,
        ).where(
            sa.func.length(users_table.c.email) > 100,
        ).values({
            users_table.c.email: None,
        })
    )
    op.execute(update_stmt)
    op.alter_column(
        "users",
        "email",
        existing_type=sa.String(length=120),
        type_=sa.VARCHAR(length=100),
        existing_nullable=True,
    )
    # ### end Alembic commands ###
