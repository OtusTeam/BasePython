image: python:3.12

stages:
  - testing
  - build
  - deploy

before_script:
  - python --version
  - pip install --upgrade pip
  - pip install poetry
  - poetry install --no-root

lint:
  stage: testing
  script:
    - poetry run pylint $(git ls-files '*.py')

test:
  stage: testing
  services:
    - postgres
  variables:
    DATABASE_TYPE: postgres
    POSTGRES_DB: blog_db
    POSTGRES_USER: user1
    POSTGRES_PASSWORD: dieciek20382
    PGHOST: postgres
    COVERAGE_DIR: "coverage-$CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA"
  script:
    - poetry run  pytest -s --cov --cov-report html:$COVERAGE_DIR --cov-fail-under 92
  artifacts:
    name: $COVERAGE_DIR
    paths:
      - $COVERAGE_DIR
    when: on_success
    expire_in: 1 week

build-job:
  stage: build
  image: docker:24.0.5
  only:
    - main
  services:
    - docker:24.0.5-dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - docker info
    - apk add --no-cache docker-compose
    - docker-compose --version
    - docker login -u danteonline -p $DOCKERHUB_TOKEN
  script:
    - echo "Build and push image"
    - docker-compose build backend
    - docker-compose push
    - echo "Done"

deploy-job:
  stage: deploy
  script:
    - echo "Connect by ssh..."
    - docker compose pull
    - docker compose down
    - docker compose up
