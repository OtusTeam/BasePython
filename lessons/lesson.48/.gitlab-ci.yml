# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/development/cicd/templates/
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml
image: python:3.12

stages:          # List of stages for jobs, and their order of execution
  - testing
  - build
  - deploy

before_script:
  - python --version
  - pip install --upgrade pip
  - pip install poetry
  - poetry install
  - source `poetry env info --path`/bin/activate

lint:       # This job runs in the build stage, which runs first.
  stage: testing
  script:
    - echo "run lint ..."

test:   # This job runs in the test stage.
  stage: testing
  services:
    - postgres
  variables:
    POSTGRES_DB: blog
    POSTGRES_USER: app
    POSTGRES_PASSWORD: pgpassword123
  script:
    - echo "VARIABLES"
    - export
    - cd fastapi-app
    - alembic upgrade head
    - pytest -s --cov --cov-report html --cov-fail-under 80

build-app:   # This job also runs in the test stage.
  stage: build    # It can run at the same time as unit-test-job (in parallel).
  script:
    - echo "build"

deploy-job:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  script:
    - echo "Deploying application..."
