image: python:3.12

stages:          # List of stages for jobs, and their order of execution
  - testing
  - build
  - deploy

before_script:
  - python --version
  - pip install --upgrade pip
  - pip install poetry
  - poetry install
  - source `poetry env info --path`/bin/activate

lint:       # This job runs in the build stage, which runs first.
  stage: testing
  script:
    - pylint $(git ls-files '*.py')

test:   # This job runs in the test stage.
  stage: testing    # It only starts when the job in the build stage completes successfully.
  services:
    - postgres
  variables:
    POSTGRES_USER: gitlabuser
    POSTGRES_PASSWORD: gitlabsercrepas222d
    POSTGRES_DB: gldb
    POSTGRES_HOST: postgres
    COVERAGE_DIR: "coverage-$CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA"
  script:
    - pytest -s --cov --cov-report html:$COVERAGE_DIR --cov-fail-under 88
  artifacts:
    name: $COVERAGE_DIR
    paths:
      - $COVERAGE_DIR
    when: on_success
    expire_in: 1 week

make-build:
  stage: build
  image: docker:24.0.5
  only:
    - main
  services:
    - docker:24.0.5-dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - docker info
    - apk add --no-cache docker-compose
    - docker-compose --version
    - docker login -u danteonline -p $DOCKERHUB_PASSWORD
  script:
    - echo "Building ..."
    - docker-compose pull backend || true
    - docker-compose build backend
    - docker-compose push
    - echo "Done"
#
#deploy-job:      # This job runs in the deploy stage.
#  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
#  script:
#    - echo "Deploying application..."
